2023-12-21 14:26:17,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-21 14:26:17,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-21 14:26:17,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-21 14:26:17,257:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-21 14:26:39,653:INFO:PyCaret ClassificationExperiment
2023-12-21 14:26:39,653:INFO:Logging name: clf-default-name
2023-12-21 14:26:39,653:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-21 14:26:39,653:INFO:version 3.2.0
2023-12-21 14:26:39,653:INFO:Initializing setup()
2023-12-21 14:26:39,653:INFO:self.USI: a396
2023-12-21 14:26:39,653:INFO:self._variable_keys: {'y_test', 'idx', 'fold_groups_param', 'exp_id', 'seed', 'is_multiclass', 'data', 'target_param', 'gpu_n_jobs_param', 'exp_name_log', 'fold_shuffle_param', 'fold_generator', 'n_jobs_param', 'log_plots_param', 'USI', 'fix_imbalance', 'y', 'memory', 'X_train', 'X_test', 'gpu_param', 'html_param', 'X', 'pipeline', 'y_train', 'logging_param', '_available_plots', '_ml_usecase'}
2023-12-21 14:26:39,653:INFO:Checking environment
2023-12-21 14:26:39,653:INFO:python_version: 3.11.5
2023-12-21 14:26:39,653:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2023-12-21 14:26:39,653:INFO:machine: AMD64
2023-12-21 14:26:39,653:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-21 14:26:39,654:INFO:Memory: svmem(total=16886980608, available=6587723776, percent=61.0, used=10299256832, free=6587723776)
2023-12-21 14:26:39,654:INFO:Physical Core: 12
2023-12-21 14:26:39,654:INFO:Logical Core: 20
2023-12-21 14:26:39,654:INFO:Checking libraries
2023-12-21 14:26:39,654:INFO:System:
2023-12-21 14:26:39,654:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2023-12-21 14:26:39,654:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-12-21 14:26:39,654:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-21 14:26:39,654:INFO:PyCaret required dependencies:
2023-12-21 14:26:41,989:INFO:                 pip: 23.2.1
2023-12-21 14:26:41,989:INFO:          setuptools: 68.0.0
2023-12-21 14:26:41,989:INFO:             pycaret: 3.2.0
2023-12-21 14:26:41,989:INFO:             IPython: 8.15.0
2023-12-21 14:26:41,989:INFO:          ipywidgets: 8.0.4
2023-12-21 14:26:41,989:INFO:                tqdm: 4.65.0
2023-12-21 14:26:41,989:INFO:               numpy: 1.24.3
2023-12-21 14:26:41,989:INFO:              pandas: 2.0.3
2023-12-21 14:26:41,989:INFO:              jinja2: 3.1.2
2023-12-21 14:26:41,989:INFO:               scipy: 1.11.1
2023-12-21 14:26:41,989:INFO:              joblib: 1.2.0
2023-12-21 14:26:41,989:INFO:             sklearn: 1.3.0
2023-12-21 14:26:41,989:INFO:                pyod: 1.1.2
2023-12-21 14:26:41,989:INFO:            imblearn: 0.10.1
2023-12-21 14:26:41,989:INFO:   category_encoders: 2.6.3
2023-12-21 14:26:41,989:INFO:            lightgbm: 4.1.0
2023-12-21 14:26:41,989:INFO:               numba: 0.57.1
2023-12-21 14:26:41,989:INFO:            requests: 2.31.0
2023-12-21 14:26:41,989:INFO:          matplotlib: 3.7.2
2023-12-21 14:26:41,989:INFO:          scikitplot: 0.3.7
2023-12-21 14:26:41,989:INFO:         yellowbrick: 1.5
2023-12-21 14:26:41,989:INFO:              plotly: 5.9.0
2023-12-21 14:26:41,989:INFO:    plotly-resampler: Not installed
2023-12-21 14:26:41,989:INFO:             kaleido: 0.2.1
2023-12-21 14:26:41,989:INFO:           schemdraw: 0.15
2023-12-21 14:26:41,989:INFO:         statsmodels: 0.14.0
2023-12-21 14:26:41,989:INFO:              sktime: 0.21.1
2023-12-21 14:26:41,989:INFO:               tbats: 1.1.3
2023-12-21 14:26:41,989:INFO:            pmdarima: 2.0.4
2023-12-21 14:26:41,989:INFO:              psutil: 5.9.0
2023-12-21 14:26:41,989:INFO:          markupsafe: 2.1.1
2023-12-21 14:26:41,989:INFO:             pickle5: Not installed
2023-12-21 14:26:41,989:INFO:         cloudpickle: 2.2.1
2023-12-21 14:26:41,989:INFO:         deprecation: 2.1.0
2023-12-21 14:26:41,989:INFO:              xxhash: 2.0.2
2023-12-21 14:26:41,989:INFO:           wurlitzer: Not installed
2023-12-21 14:26:41,989:INFO:PyCaret optional dependencies:
2023-12-21 14:26:42,005:INFO:                shap: Not installed
2023-12-21 14:26:42,005:INFO:           interpret: Not installed
2023-12-21 14:26:42,005:INFO:                umap: Not installed
2023-12-21 14:26:42,005:INFO:     ydata_profiling: Not installed
2023-12-21 14:26:42,005:INFO:  explainerdashboard: Not installed
2023-12-21 14:26:42,005:INFO:             autoviz: Not installed
2023-12-21 14:26:42,005:INFO:           fairlearn: Not installed
2023-12-21 14:26:42,005:INFO:          deepchecks: Not installed
2023-12-21 14:26:42,005:INFO:             xgboost: Not installed
2023-12-21 14:26:42,005:INFO:            catboost: Not installed
2023-12-21 14:26:42,005:INFO:              kmodes: Not installed
2023-12-21 14:26:42,005:INFO:             mlxtend: Not installed
2023-12-21 14:26:42,005:INFO:       statsforecast: Not installed
2023-12-21 14:26:42,005:INFO:        tune_sklearn: Not installed
2023-12-21 14:26:42,005:INFO:                 ray: Not installed
2023-12-21 14:26:42,005:INFO:            hyperopt: Not installed
2023-12-21 14:26:42,005:INFO:              optuna: Not installed
2023-12-21 14:26:42,005:INFO:               skopt: Not installed
2023-12-21 14:26:42,005:INFO:              mlflow: Not installed
2023-12-21 14:26:42,005:INFO:              gradio: Not installed
2023-12-21 14:26:42,005:INFO:             fastapi: Not installed
2023-12-21 14:26:42,005:INFO:             uvicorn: Not installed
2023-12-21 14:26:42,005:INFO:              m2cgen: Not installed
2023-12-21 14:26:42,005:INFO:           evidently: Not installed
2023-12-21 14:26:42,005:INFO:               fugue: Not installed
2023-12-21 14:26:42,005:INFO:           streamlit: Not installed
2023-12-21 14:26:42,005:INFO:             prophet: Not installed
2023-12-21 14:26:42,005:INFO:None
2023-12-21 14:26:42,005:INFO:Set up data.
2023-12-21 14:26:42,005:INFO:Set up folding strategy.
2023-12-21 14:26:42,005:INFO:Set up train/test split.
2023-12-21 14:26:42,005:INFO:Set up index.
2023-12-21 14:26:42,005:INFO:Assigning column types.
2023-12-21 14:26:42,021:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-21 14:26:42,041:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-21 14:26:42,041:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 14:26:42,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-21 14:26:42,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 14:26:42,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,104:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-21 14:26:42,119:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 14:26:42,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 14:26:42,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,176:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-21 14:26:42,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,258:INFO:Preparing preprocessing pipeline...
2023-12-21 14:26:42,265:INFO:Set up label encoding.
2023-12-21 14:26:42,265:INFO:Set up simple imputation.
2023-12-21 14:26:42,288:INFO:Finished creating preprocessing pipeline.
2023-12-21 14:26:42,288:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\huang\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'fea...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-12-21 14:26:42,288:INFO:Creating final display dataframe.
2023-12-21 14:26:42,335:INFO:Setup _display_container:                     Description              Value
0                    Session id               3425
1                        Target             Status
2                   Target type         Multiclass
3                Target mapping  C: 0, CL: 1, D: 2
4           Original data shape         (7905, 27)
5        Transformed data shape         (7905, 27)
6   Transformed train set shape         (5533, 27)
7    Transformed test set shape         (2372, 27)
8              Numeric features                 26
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               a396
2023-12-21 14:26:42,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 14:26:42,408:INFO:setup() successfully completed in 2.76s...............
2023-12-21 14:26:42,408:INFO:Initializing compare_models()
2023-12-21 14:26:42,408:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-12-21 14:26:42,408:INFO:Checking exceptions
2023-12-21 14:26:42,423:INFO:Preparing display monitor
2023-12-21 14:26:42,436:INFO:Initializing Logistic Regression
2023-12-21 14:26:42,436:INFO:Total runtime is 0.0 minutes
2023-12-21 14:26:42,438:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:42,438:INFO:Initializing create_model()
2023-12-21 14:26:42,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:42,438:INFO:Checking exceptions
2023-12-21 14:26:42,438:INFO:Importing libraries
2023-12-21 14:26:42,438:INFO:Copying training dataset
2023-12-21 14:26:42,441:INFO:Defining folds
2023-12-21 14:26:42,441:INFO:Declaring metric variables
2023-12-21 14:26:42,441:INFO:Importing untrained model
2023-12-21 14:26:42,441:INFO:Logistic Regression Imported successfully
2023-12-21 14:26:42,441:INFO:Starting cross validation
2023-12-21 14:26:42,441:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:45,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,809:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,809:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,813:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,855:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,855:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,864:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,864:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,864:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,864:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,864:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,864:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,892:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,895:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,895:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,895:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,895:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,895:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,905:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,905:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,905:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,908:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,908:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,908:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,915:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,915:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,924:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,924:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:45,945:INFO:Calculating mean and std
2023-12-21 14:26:45,945:INFO:Creating metrics dataframe
2023-12-21 14:26:45,945:INFO:Uploading results into container
2023-12-21 14:26:45,945:INFO:Uploading model into container now
2023-12-21 14:26:45,945:INFO:_master_model_container: 1
2023-12-21 14:26:45,945:INFO:_display_container: 2
2023-12-21 14:26:45,945:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3425, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-21 14:26:45,945:INFO:create_model() successfully completed......................................
2023-12-21 14:26:46,024:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:46,024:INFO:Creating metrics dataframe
2023-12-21 14:26:46,027:INFO:Initializing K Neighbors Classifier
2023-12-21 14:26:46,027:INFO:Total runtime is 0.05985508759816487 minutes
2023-12-21 14:26:46,027:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:46,027:INFO:Initializing create_model()
2023-12-21 14:26:46,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:46,027:INFO:Checking exceptions
2023-12-21 14:26:46,027:INFO:Importing libraries
2023-12-21 14:26:46,027:INFO:Copying training dataset
2023-12-21 14:26:46,027:INFO:Defining folds
2023-12-21 14:26:46,027:INFO:Declaring metric variables
2023-12-21 14:26:46,027:INFO:Importing untrained model
2023-12-21 14:26:46,027:INFO:K Neighbors Classifier Imported successfully
2023-12-21 14:26:46,041:INFO:Starting cross validation
2023-12-21 14:26:46,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:48,941:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:48,945:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:48,945:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,096:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,104:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,104:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,107:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,109:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,109:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,109:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,109:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,117:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,117:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,127:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,127:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,127:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,137:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,137:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,141:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,141:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,141:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,141:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,141:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,147:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,147:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,147:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,147:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,147:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,157:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,157:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,177:INFO:Calculating mean and std
2023-12-21 14:26:49,177:INFO:Creating metrics dataframe
2023-12-21 14:26:49,177:INFO:Uploading results into container
2023-12-21 14:26:49,177:INFO:Uploading model into container now
2023-12-21 14:26:49,177:INFO:_master_model_container: 2
2023-12-21 14:26:49,177:INFO:_display_container: 2
2023-12-21 14:26:49,177:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-21 14:26:49,177:INFO:create_model() successfully completed......................................
2023-12-21 14:26:49,255:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:49,255:INFO:Creating metrics dataframe
2023-12-21 14:26:49,261:INFO:Initializing Naive Bayes
2023-12-21 14:26:49,261:INFO:Total runtime is 0.11375261942545573 minutes
2023-12-21 14:26:49,261:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:49,261:INFO:Initializing create_model()
2023-12-21 14:26:49,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:49,261:INFO:Checking exceptions
2023-12-21 14:26:49,261:INFO:Importing libraries
2023-12-21 14:26:49,261:INFO:Copying training dataset
2023-12-21 14:26:49,261:INFO:Defining folds
2023-12-21 14:26:49,261:INFO:Declaring metric variables
2023-12-21 14:26:49,261:INFO:Importing untrained model
2023-12-21 14:26:49,261:INFO:Naive Bayes Imported successfully
2023-12-21 14:26:49,275:INFO:Starting cross validation
2023-12-21 14:26:49,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:49,306:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,309:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,314:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,323:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,323:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,325:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,326:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,326:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,326:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,335:INFO:Calculating mean and std
2023-12-21 14:26:49,335:INFO:Creating metrics dataframe
2023-12-21 14:26:49,335:INFO:Uploading results into container
2023-12-21 14:26:49,335:INFO:Uploading model into container now
2023-12-21 14:26:49,335:INFO:_master_model_container: 3
2023-12-21 14:26:49,335:INFO:_display_container: 2
2023-12-21 14:26:49,335:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-21 14:26:49,335:INFO:create_model() successfully completed......................................
2023-12-21 14:26:49,390:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:49,390:INFO:Creating metrics dataframe
2023-12-21 14:26:49,405:INFO:Initializing Decision Tree Classifier
2023-12-21 14:26:49,405:INFO:Total runtime is 0.11615694761276245 minutes
2023-12-21 14:26:49,405:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:49,405:INFO:Initializing create_model()
2023-12-21 14:26:49,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:49,405:INFO:Checking exceptions
2023-12-21 14:26:49,405:INFO:Importing libraries
2023-12-21 14:26:49,405:INFO:Copying training dataset
2023-12-21 14:26:49,405:INFO:Defining folds
2023-12-21 14:26:49,405:INFO:Declaring metric variables
2023-12-21 14:26:49,405:INFO:Importing untrained model
2023-12-21 14:26:49,405:INFO:Decision Tree Classifier Imported successfully
2023-12-21 14:26:49,405:INFO:Starting cross validation
2023-12-21 14:26:49,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:49,481:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,481:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,481:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,481:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,481:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,481:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,490:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,490:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,492:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,492:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,493:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,494:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,495:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,495:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,495:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,497:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,497:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,497:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,498:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,498:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,499:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,499:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,500:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,500:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,501:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,501:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,501:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,503:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,504:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,506:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,513:INFO:Calculating mean and std
2023-12-21 14:26:49,513:INFO:Creating metrics dataframe
2023-12-21 14:26:49,513:INFO:Uploading results into container
2023-12-21 14:26:49,513:INFO:Uploading model into container now
2023-12-21 14:26:49,513:INFO:_master_model_container: 4
2023-12-21 14:26:49,513:INFO:_display_container: 2
2023-12-21 14:26:49,513:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3425, splitter='best')
2023-12-21 14:26:49,513:INFO:create_model() successfully completed......................................
2023-12-21 14:26:49,574:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:49,574:INFO:Creating metrics dataframe
2023-12-21 14:26:49,574:INFO:Initializing SVM - Linear Kernel
2023-12-21 14:26:49,574:INFO:Total runtime is 0.11896440982818603 minutes
2023-12-21 14:26:49,574:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:49,574:INFO:Initializing create_model()
2023-12-21 14:26:49,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:49,574:INFO:Checking exceptions
2023-12-21 14:26:49,574:INFO:Importing libraries
2023-12-21 14:26:49,574:INFO:Copying training dataset
2023-12-21 14:26:49,589:INFO:Defining folds
2023-12-21 14:26:49,589:INFO:Declaring metric variables
2023-12-21 14:26:49,589:INFO:Importing untrained model
2023-12-21 14:26:49,589:INFO:SVM - Linear Kernel Imported successfully
2023-12-21 14:26:49,589:INFO:Starting cross validation
2023-12-21 14:26:49,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:49,687:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,687:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,688:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,688:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,688:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,697:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,697:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,698:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,705:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,705:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,705:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,705:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,709:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,719:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,719:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,719:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,719:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,721:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,721:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,729:INFO:Calculating mean and std
2023-12-21 14:26:49,729:INFO:Creating metrics dataframe
2023-12-21 14:26:49,729:INFO:Uploading results into container
2023-12-21 14:26:49,729:INFO:Uploading model into container now
2023-12-21 14:26:49,729:INFO:_master_model_container: 5
2023-12-21 14:26:49,729:INFO:_display_container: 2
2023-12-21 14:26:49,729:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3425, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-21 14:26:49,729:INFO:create_model() successfully completed......................................
2023-12-21 14:26:49,791:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:49,791:INFO:Creating metrics dataframe
2023-12-21 14:26:49,791:INFO:Initializing Ridge Classifier
2023-12-21 14:26:49,791:INFO:Total runtime is 0.12258212566375731 minutes
2023-12-21 14:26:49,791:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:49,791:INFO:Initializing create_model()
2023-12-21 14:26:49,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:49,791:INFO:Checking exceptions
2023-12-21 14:26:49,791:INFO:Importing libraries
2023-12-21 14:26:49,791:INFO:Copying training dataset
2023-12-21 14:26:49,803:INFO:Defining folds
2023-12-21 14:26:49,803:INFO:Declaring metric variables
2023-12-21 14:26:49,806:INFO:Importing untrained model
2023-12-21 14:26:49,806:INFO:Ridge Classifier Imported successfully
2023-12-21 14:26:49,806:INFO:Starting cross validation
2023-12-21 14:26:49,806:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:49,831:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,831:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,831:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,831:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,840:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,842:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,842:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,842:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,844:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,845:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,857:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,857:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,858:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,858:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,858:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,859:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,859:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,860:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,860:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:49,861:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,861:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:49,872:INFO:Calculating mean and std
2023-12-21 14:26:49,874:INFO:Creating metrics dataframe
2023-12-21 14:26:49,874:INFO:Uploading results into container
2023-12-21 14:26:49,874:INFO:Uploading model into container now
2023-12-21 14:26:49,874:INFO:_master_model_container: 6
2023-12-21 14:26:49,874:INFO:_display_container: 2
2023-12-21 14:26:49,874:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3425, solver='auto',
                tol=0.0001)
2023-12-21 14:26:49,874:INFO:create_model() successfully completed......................................
2023-12-21 14:26:49,924:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:49,924:INFO:Creating metrics dataframe
2023-12-21 14:26:49,943:INFO:Initializing Random Forest Classifier
2023-12-21 14:26:49,943:INFO:Total runtime is 0.12511340379714964 minutes
2023-12-21 14:26:49,943:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:49,943:INFO:Initializing create_model()
2023-12-21 14:26:49,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:49,943:INFO:Checking exceptions
2023-12-21 14:26:49,943:INFO:Importing libraries
2023-12-21 14:26:49,943:INFO:Copying training dataset
2023-12-21 14:26:49,943:INFO:Defining folds
2023-12-21 14:26:49,943:INFO:Declaring metric variables
2023-12-21 14:26:49,943:INFO:Importing untrained model
2023-12-21 14:26:49,943:INFO:Random Forest Classifier Imported successfully
2023-12-21 14:26:49,943:INFO:Starting cross validation
2023-12-21 14:26:49,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:50,526:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,531:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,533:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,557:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,558:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,558:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,558:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,558:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,561:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,561:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,562:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,563:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,563:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,564:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:50,564:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,564:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,567:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,567:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,567:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,567:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,567:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:50,569:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,569:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,586:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,591:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,593:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,673:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,676:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,676:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:50,676:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,686:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:50,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,706:INFO:Calculating mean and std
2023-12-21 14:26:50,706:INFO:Creating metrics dataframe
2023-12-21 14:26:50,706:INFO:Uploading results into container
2023-12-21 14:26:50,706:INFO:Uploading model into container now
2023-12-21 14:26:50,706:INFO:_master_model_container: 7
2023-12-21 14:26:50,706:INFO:_display_container: 2
2023-12-21 14:26:50,706:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3425, verbose=0, warm_start=False)
2023-12-21 14:26:50,706:INFO:create_model() successfully completed......................................
2023-12-21 14:26:50,758:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:50,758:INFO:Creating metrics dataframe
2023-12-21 14:26:50,774:INFO:Initializing Quadratic Discriminant Analysis
2023-12-21 14:26:50,774:INFO:Total runtime is 0.13896911938985188 minutes
2023-12-21 14:26:50,774:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:50,774:INFO:Initializing create_model()
2023-12-21 14:26:50,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:50,774:INFO:Checking exceptions
2023-12-21 14:26:50,774:INFO:Importing libraries
2023-12-21 14:26:50,774:INFO:Copying training dataset
2023-12-21 14:26:50,774:INFO:Defining folds
2023-12-21 14:26:50,774:INFO:Declaring metric variables
2023-12-21 14:26:50,774:INFO:Importing untrained model
2023-12-21 14:26:50,774:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-21 14:26:50,791:INFO:Starting cross validation
2023-12-21 14:26:50,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:50,812:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,813:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,816:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,820:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,822:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,822:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,823:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,826:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,828:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,829:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,829:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,829:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,829:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,840:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,840:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,841:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,841:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,841:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,842:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,844:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,844:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,845:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,847:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,847:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,847:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,849:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:50,851:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:50,863:INFO:Calculating mean and std
2023-12-21 14:26:50,864:INFO:Creating metrics dataframe
2023-12-21 14:26:50,866:INFO:Uploading results into container
2023-12-21 14:26:50,866:INFO:Uploading model into container now
2023-12-21 14:26:50,866:INFO:_master_model_container: 8
2023-12-21 14:26:50,867:INFO:_display_container: 2
2023-12-21 14:26:50,867:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-21 14:26:50,867:INFO:create_model() successfully completed......................................
2023-12-21 14:26:50,938:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:50,938:INFO:Creating metrics dataframe
2023-12-21 14:26:50,943:INFO:Initializing Ada Boost Classifier
2023-12-21 14:26:50,943:INFO:Total runtime is 0.14178919394810993 minutes
2023-12-21 14:26:50,948:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:50,948:INFO:Initializing create_model()
2023-12-21 14:26:50,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:50,948:INFO:Checking exceptions
2023-12-21 14:26:50,948:INFO:Importing libraries
2023-12-21 14:26:50,948:INFO:Copying training dataset
2023-12-21 14:26:50,948:INFO:Defining folds
2023-12-21 14:26:50,948:INFO:Declaring metric variables
2023-12-21 14:26:50,948:INFO:Importing untrained model
2023-12-21 14:26:50,957:INFO:Ada Boost Classifier Imported successfully
2023-12-21 14:26:50,960:INFO:Starting cross validation
2023-12-21 14:26:50,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:51,225:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,229:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,229:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,235:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,245:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,245:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,259:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,259:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,259:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,259:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,266:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,266:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,266:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,266:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,274:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,274:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,276:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,276:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,276:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,276:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,276:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,286:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,286:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,289:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,296:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,296:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,296:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,296:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,296:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,296:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:51,306:INFO:Calculating mean and std
2023-12-21 14:26:51,306:INFO:Creating metrics dataframe
2023-12-21 14:26:51,306:INFO:Uploading results into container
2023-12-21 14:26:51,306:INFO:Uploading model into container now
2023-12-21 14:26:51,306:INFO:_master_model_container: 9
2023-12-21 14:26:51,306:INFO:_display_container: 2
2023-12-21 14:26:51,306:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3425)
2023-12-21 14:26:51,306:INFO:create_model() successfully completed......................................
2023-12-21 14:26:51,374:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:51,374:INFO:Creating metrics dataframe
2023-12-21 14:26:51,374:INFO:Initializing Gradient Boosting Classifier
2023-12-21 14:26:51,374:INFO:Total runtime is 0.14896440505981445 minutes
2023-12-21 14:26:51,374:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:51,374:INFO:Initializing create_model()
2023-12-21 14:26:51,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:51,374:INFO:Checking exceptions
2023-12-21 14:26:51,374:INFO:Importing libraries
2023-12-21 14:26:51,374:INFO:Copying training dataset
2023-12-21 14:26:51,374:INFO:Defining folds
2023-12-21 14:26:51,374:INFO:Declaring metric variables
2023-12-21 14:26:51,374:INFO:Importing untrained model
2023-12-21 14:26:51,374:INFO:Gradient Boosting Classifier Imported successfully
2023-12-21 14:26:51,390:INFO:Starting cross validation
2023-12-21 14:26:51,390:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:54,543:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,543:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,543:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,588:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,588:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,594:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,604:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,614:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,614:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,635:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,635:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,635:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,657:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,657:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,657:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,675:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,675:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,675:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,725:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,746:INFO:Calculating mean and std
2023-12-21 14:26:54,746:INFO:Creating metrics dataframe
2023-12-21 14:26:54,749:INFO:Uploading results into container
2023-12-21 14:26:54,749:INFO:Uploading model into container now
2023-12-21 14:26:54,750:INFO:_master_model_container: 10
2023-12-21 14:26:54,750:INFO:_display_container: 2
2023-12-21 14:26:54,750:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3425, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-21 14:26:54,750:INFO:create_model() successfully completed......................................
2023-12-21 14:26:54,823:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:54,823:INFO:Creating metrics dataframe
2023-12-21 14:26:54,826:INFO:Initializing Linear Discriminant Analysis
2023-12-21 14:26:54,826:INFO:Total runtime is 0.206494669119517 minutes
2023-12-21 14:26:54,826:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:54,826:INFO:Initializing create_model()
2023-12-21 14:26:54,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:54,826:INFO:Checking exceptions
2023-12-21 14:26:54,826:INFO:Importing libraries
2023-12-21 14:26:54,826:INFO:Copying training dataset
2023-12-21 14:26:54,826:INFO:Defining folds
2023-12-21 14:26:54,826:INFO:Declaring metric variables
2023-12-21 14:26:54,826:INFO:Importing untrained model
2023-12-21 14:26:54,826:INFO:Linear Discriminant Analysis Imported successfully
2023-12-21 14:26:54,841:INFO:Starting cross validation
2023-12-21 14:26:54,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,881:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,890:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,890:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,890:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,890:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,892:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,892:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,893:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,893:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,893:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,893:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,894:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,894:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,894:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,894:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,895:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,895:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,896:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,896:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,896:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,897:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,898:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,898:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,899:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,900:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,902:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,903:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:54,904:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:54,913:INFO:Calculating mean and std
2023-12-21 14:26:54,913:INFO:Creating metrics dataframe
2023-12-21 14:26:54,913:INFO:Uploading results into container
2023-12-21 14:26:54,913:INFO:Uploading model into container now
2023-12-21 14:26:54,913:INFO:_master_model_container: 11
2023-12-21 14:26:54,913:INFO:_display_container: 2
2023-12-21 14:26:54,913:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-21 14:26:54,913:INFO:create_model() successfully completed......................................
2023-12-21 14:26:54,973:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:54,973:INFO:Creating metrics dataframe
2023-12-21 14:26:54,973:INFO:Initializing Extra Trees Classifier
2023-12-21 14:26:54,973:INFO:Total runtime is 0.20894997119903563 minutes
2023-12-21 14:26:54,973:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:54,973:INFO:Initializing create_model()
2023-12-21 14:26:54,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:54,973:INFO:Checking exceptions
2023-12-21 14:26:54,973:INFO:Importing libraries
2023-12-21 14:26:54,973:INFO:Copying training dataset
2023-12-21 14:26:54,989:INFO:Defining folds
2023-12-21 14:26:54,989:INFO:Declaring metric variables
2023-12-21 14:26:54,989:INFO:Importing untrained model
2023-12-21 14:26:54,989:INFO:Extra Trees Classifier Imported successfully
2023-12-21 14:26:54,989:INFO:Starting cross validation
2023-12-21 14:26:54,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:55,376:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,380:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,380:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,381:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:55,383:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,383:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,387:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,393:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,393:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,394:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:55,396:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,396:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,401:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,409:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,409:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,414:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,414:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,424:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:55,424:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,431:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,434:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,436:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,481:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,483:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,483:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,485:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,486:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,487:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:55,497:INFO:Calculating mean and std
2023-12-21 14:26:55,497:INFO:Creating metrics dataframe
2023-12-21 14:26:55,497:INFO:Uploading results into container
2023-12-21 14:26:55,497:INFO:Uploading model into container now
2023-12-21 14:26:55,497:INFO:_master_model_container: 12
2023-12-21 14:26:55,497:INFO:_display_container: 2
2023-12-21 14:26:55,497:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3425, verbose=0, warm_start=False)
2023-12-21 14:26:55,497:INFO:create_model() successfully completed......................................
2023-12-21 14:26:55,557:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:55,557:INFO:Creating metrics dataframe
2023-12-21 14:26:55,557:INFO:Initializing Light Gradient Boosting Machine
2023-12-21 14:26:55,557:INFO:Total runtime is 0.21868639787038166 minutes
2023-12-21 14:26:55,572:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:55,572:INFO:Initializing create_model()
2023-12-21 14:26:55,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:55,572:INFO:Checking exceptions
2023-12-21 14:26:55,572:INFO:Importing libraries
2023-12-21 14:26:55,572:INFO:Copying training dataset
2023-12-21 14:26:55,572:INFO:Defining folds
2023-12-21 14:26:55,572:INFO:Declaring metric variables
2023-12-21 14:26:55,572:INFO:Importing untrained model
2023-12-21 14:26:55,572:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-21 14:26:55,572:INFO:Starting cross validation
2023-12-21 14:26:55,572:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:58,585:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,590:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,594:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,600:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,604:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,604:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,609:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,609:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,614:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,614:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,628:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,628:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,628:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,638:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,638:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,827:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,827:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,827:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,827:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,827:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,840:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,840:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,840:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,979:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,979:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,989:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:58,999:INFO:Calculating mean and std
2023-12-21 14:26:58,999:INFO:Creating metrics dataframe
2023-12-21 14:26:59,003:INFO:Uploading results into container
2023-12-21 14:26:59,003:INFO:Uploading model into container now
2023-12-21 14:26:59,004:INFO:_master_model_container: 13
2023-12-21 14:26:59,004:INFO:_display_container: 2
2023-12-21 14:26:59,005:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3425, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-21 14:26:59,005:INFO:create_model() successfully completed......................................
2023-12-21 14:26:59,072:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:59,072:INFO:Creating metrics dataframe
2023-12-21 14:26:59,072:INFO:Initializing Dummy Classifier
2023-12-21 14:26:59,072:INFO:Total runtime is 0.27726632754007974 minutes
2023-12-21 14:26:59,088:INFO:SubProcess create_model() called ==================================
2023-12-21 14:26:59,088:INFO:Initializing create_model()
2023-12-21 14:26:59,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C3EECBE850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:59,088:INFO:Checking exceptions
2023-12-21 14:26:59,088:INFO:Importing libraries
2023-12-21 14:26:59,088:INFO:Copying training dataset
2023-12-21 14:26:59,088:INFO:Defining folds
2023-12-21 14:26:59,088:INFO:Declaring metric variables
2023-12-21 14:26:59,088:INFO:Importing untrained model
2023-12-21 14:26:59,088:INFO:Dummy Classifier Imported successfully
2023-12-21 14:26:59,088:INFO:Starting cross validation
2023-12-21 14:26:59,088:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 14:26:59,123:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,124:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,125:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,126:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,126:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,126:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,127:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,128:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,128:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,128:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,130:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,130:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,130:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,130:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,130:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,131:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,139:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,139:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,141:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,142:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,143:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,143:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,143:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,143:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 14:26:59,143:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,143:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 14:26:59,160:INFO:Calculating mean and std
2023-12-21 14:26:59,160:INFO:Creating metrics dataframe
2023-12-21 14:26:59,162:INFO:Uploading results into container
2023-12-21 14:26:59,162:INFO:Uploading model into container now
2023-12-21 14:26:59,163:INFO:_master_model_container: 14
2023-12-21 14:26:59,163:INFO:_display_container: 2
2023-12-21 14:26:59,163:INFO:DummyClassifier(constant=None, random_state=3425, strategy='prior')
2023-12-21 14:26:59,163:INFO:create_model() successfully completed......................................
2023-12-21 14:26:59,224:INFO:SubProcess create_model() end ==================================
2023-12-21 14:26:59,224:INFO:Creating metrics dataframe
2023-12-21 14:26:59,224:INFO:Initializing create_model()
2023-12-21 14:26:59,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C3EBF08150>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3425, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 14:26:59,239:INFO:Checking exceptions
2023-12-21 14:26:59,239:INFO:Importing libraries
2023-12-21 14:26:59,239:INFO:Copying training dataset
2023-12-21 14:26:59,239:INFO:Defining folds
2023-12-21 14:26:59,239:INFO:Declaring metric variables
2023-12-21 14:26:59,239:INFO:Importing untrained model
2023-12-21 14:26:59,239:INFO:Declaring custom model
2023-12-21 14:26:59,239:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-21 14:26:59,239:INFO:Cross validation set to False
2023-12-21 14:26:59,239:INFO:Fitting Model
2023-12-21 14:26:59,267:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000688 seconds.
2023-12-21 14:26:59,267:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-12-21 14:26:59,267:INFO:[LightGBM] [Info] Total Bins 2213
2023-12-21 14:26:59,267:INFO:[LightGBM] [Info] Number of data points in the train set: 5533, number of used features: 26
2023-12-21 14:26:59,267:INFO:[LightGBM] [Info] Start training from score -0.465136
2023-12-21 14:26:59,267:INFO:[LightGBM] [Info] Start training from score -3.355795
2023-12-21 14:26:59,270:INFO:[LightGBM] [Info] Start training from score -1.087469
2023-12-21 14:26:59,440:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3425, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-21 14:26:59,440:INFO:create_model() successfully completed......................................
2023-12-21 14:26:59,544:INFO:_master_model_container: 14
2023-12-21 14:26:59,544:INFO:_display_container: 2
2023-12-21 14:26:59,544:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3425, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-21 14:26:59,544:INFO:compare_models() successfully completed......................................
2023-12-21 15:56:06,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-21 15:56:06,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-21 15:56:06,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-21 15:56:06,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-21 15:58:58,580:INFO:PyCaret ClassificationExperiment
2023-12-21 15:58:58,580:INFO:Logging name: clf-default-name
2023-12-21 15:58:58,580:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-21 15:58:58,580:INFO:version 3.2.0
2023-12-21 15:58:58,580:INFO:Initializing setup()
2023-12-21 15:58:58,580:INFO:self.USI: bdba
2023-12-21 15:58:58,580:INFO:self._variable_keys: {'gpu_param', 'html_param', '_ml_usecase', '_available_plots', 'n_jobs_param', 'fold_groups_param', 'X_test', 'seed', 'y_train', 'target_param', 'fold_generator', 'X', 'fix_imbalance', 'USI', 'idx', 'is_multiclass', 'logging_param', 'log_plots_param', 'y_test', 'data', 'exp_id', 'memory', 'gpu_n_jobs_param', 'X_train', 'fold_shuffle_param', 'exp_name_log', 'y', 'pipeline'}
2023-12-21 15:58:58,580:INFO:Checking environment
2023-12-21 15:58:58,580:INFO:python_version: 3.11.5
2023-12-21 15:58:58,580:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2023-12-21 15:58:58,580:INFO:machine: AMD64
2023-12-21 15:58:58,581:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-21 15:58:58,583:INFO:Memory: svmem(total=16886980608, available=7392948224, percent=56.2, used=9494032384, free=7392948224)
2023-12-21 15:58:58,583:INFO:Physical Core: 12
2023-12-21 15:58:58,583:INFO:Logical Core: 20
2023-12-21 15:58:58,583:INFO:Checking libraries
2023-12-21 15:58:58,583:INFO:System:
2023-12-21 15:58:58,583:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2023-12-21 15:58:58,583:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-12-21 15:58:58,583:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-21 15:58:58,583:INFO:PyCaret required dependencies:
2023-12-21 15:58:58,584:INFO:                 pip: 23.2.1
2023-12-21 15:58:58,584:INFO:          setuptools: 68.0.0
2023-12-21 15:58:58,584:INFO:             pycaret: 3.2.0
2023-12-21 15:58:58,584:INFO:             IPython: 8.15.0
2023-12-21 15:58:58,584:INFO:          ipywidgets: 8.0.4
2023-12-21 15:58:58,584:INFO:                tqdm: 4.65.0
2023-12-21 15:58:58,584:INFO:               numpy: 1.24.3
2023-12-21 15:58:58,586:INFO:              pandas: 2.0.3
2023-12-21 15:58:58,586:INFO:              jinja2: 3.1.2
2023-12-21 15:58:58,586:INFO:               scipy: 1.11.1
2023-12-21 15:58:58,586:INFO:              joblib: 1.2.0
2023-12-21 15:58:58,586:INFO:             sklearn: 1.3.0
2023-12-21 15:58:58,586:INFO:                pyod: 1.1.2
2023-12-21 15:58:58,586:INFO:            imblearn: 0.10.1
2023-12-21 15:58:58,586:INFO:   category_encoders: 2.6.3
2023-12-21 15:58:58,586:INFO:            lightgbm: 4.1.0
2023-12-21 15:58:58,586:INFO:               numba: 0.57.1
2023-12-21 15:58:58,586:INFO:            requests: 2.31.0
2023-12-21 15:58:58,586:INFO:          matplotlib: 3.7.2
2023-12-21 15:58:58,586:INFO:          scikitplot: 0.3.7
2023-12-21 15:58:58,586:INFO:         yellowbrick: 1.5
2023-12-21 15:58:58,586:INFO:              plotly: 5.9.0
2023-12-21 15:58:58,586:INFO:    plotly-resampler: Not installed
2023-12-21 15:58:58,586:INFO:             kaleido: 0.2.1
2023-12-21 15:58:58,586:INFO:           schemdraw: 0.15
2023-12-21 15:58:58,586:INFO:         statsmodels: 0.14.0
2023-12-21 15:58:58,586:INFO:              sktime: 0.21.1
2023-12-21 15:58:58,586:INFO:               tbats: 1.1.3
2023-12-21 15:58:58,586:INFO:            pmdarima: 2.0.4
2023-12-21 15:58:58,586:INFO:              psutil: 5.9.0
2023-12-21 15:58:58,586:INFO:          markupsafe: 2.1.1
2023-12-21 15:58:58,586:INFO:             pickle5: Not installed
2023-12-21 15:58:58,586:INFO:         cloudpickle: 2.2.1
2023-12-21 15:58:58,586:INFO:         deprecation: 2.1.0
2023-12-21 15:58:58,586:INFO:              xxhash: 2.0.2
2023-12-21 15:58:58,586:INFO:           wurlitzer: Not installed
2023-12-21 15:58:58,586:INFO:PyCaret optional dependencies:
2023-12-21 15:58:58,595:INFO:                shap: Not installed
2023-12-21 15:58:58,595:INFO:           interpret: Not installed
2023-12-21 15:58:58,595:INFO:                umap: Not installed
2023-12-21 15:58:58,595:INFO:     ydata_profiling: Not installed
2023-12-21 15:58:58,595:INFO:  explainerdashboard: Not installed
2023-12-21 15:58:58,595:INFO:             autoviz: Not installed
2023-12-21 15:58:58,595:INFO:           fairlearn: Not installed
2023-12-21 15:58:58,595:INFO:          deepchecks: Not installed
2023-12-21 15:58:58,595:INFO:             xgboost: Not installed
2023-12-21 15:58:58,595:INFO:            catboost: Not installed
2023-12-21 15:58:58,595:INFO:              kmodes: Not installed
2023-12-21 15:58:58,595:INFO:             mlxtend: Not installed
2023-12-21 15:58:58,595:INFO:       statsforecast: Not installed
2023-12-21 15:58:58,595:INFO:        tune_sklearn: Not installed
2023-12-21 15:58:58,595:INFO:                 ray: Not installed
2023-12-21 15:58:58,595:INFO:            hyperopt: Not installed
2023-12-21 15:58:58,595:INFO:              optuna: Not installed
2023-12-21 15:58:58,596:INFO:               skopt: Not installed
2023-12-21 15:58:58,596:INFO:              mlflow: Not installed
2023-12-21 15:58:58,596:INFO:              gradio: Not installed
2023-12-21 15:58:58,596:INFO:             fastapi: Not installed
2023-12-21 15:58:58,596:INFO:             uvicorn: Not installed
2023-12-21 15:58:58,596:INFO:              m2cgen: Not installed
2023-12-21 15:58:58,596:INFO:           evidently: Not installed
2023-12-21 15:58:58,596:INFO:               fugue: Not installed
2023-12-21 15:58:58,596:INFO:           streamlit: Not installed
2023-12-21 15:58:58,596:INFO:             prophet: Not installed
2023-12-21 15:58:58,596:INFO:None
2023-12-21 15:58:58,596:INFO:Set up data.
2023-12-21 15:58:58,600:INFO:Set up folding strategy.
2023-12-21 15:58:58,600:INFO:Set up train/test split.
2023-12-21 15:58:58,600:INFO:Set up index.
2023-12-21 15:58:58,600:INFO:Assigning column types.
2023-12-21 15:58:58,600:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-21 15:58:58,636:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-21 15:58:58,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 15:58:58,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,681:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-21 15:58:58,682:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 15:58:58,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,697:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-21 15:58:58,721:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 15:58:58,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 15:58:58,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,775:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-21 15:58:58,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,854:INFO:Preparing preprocessing pipeline...
2023-12-21 15:58:58,855:INFO:Set up label encoding.
2023-12-21 15:58:58,855:INFO:Set up simple imputation.
2023-12-21 15:58:58,880:INFO:Finished creating preprocessing pipeline.
2023-12-21 15:58:58,883:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\huang\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'fea...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-12-21 15:58:58,883:INFO:Creating final display dataframe.
2023-12-21 15:58:58,932:INFO:Setup _display_container:                     Description              Value
0                    Session id               2440
1                        Target             Status
2                   Target type         Multiclass
3                Target mapping  C: 0, CL: 1, D: 2
4           Original data shape         (7905, 26)
5        Transformed data shape         (7905, 26)
6   Transformed train set shape         (5533, 26)
7    Transformed test set shape         (2372, 26)
8              Numeric features                 25
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               bdba
2023-12-21 15:58:58,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:58,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:59,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:59,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:58:59,016:INFO:setup() successfully completed in 0.44s...............
2023-12-21 15:58:59,016:INFO:Initializing compare_models()
2023-12-21 15:58:59,016:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-12-21 15:58:59,016:INFO:Checking exceptions
2023-12-21 15:58:59,019:INFO:Preparing display monitor
2023-12-21 15:58:59,031:INFO:Initializing Logistic Regression
2023-12-21 15:58:59,032:INFO:Total runtime is 1.6466776529947916e-05 minutes
2023-12-21 15:58:59,033:INFO:SubProcess create_model() called ==================================
2023-12-21 15:58:59,034:INFO:Initializing create_model()
2023-12-21 15:58:59,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:58:59,034:INFO:Checking exceptions
2023-12-21 15:58:59,034:INFO:Importing libraries
2023-12-21 15:58:59,034:INFO:Copying training dataset
2023-12-21 15:58:59,037:INFO:Defining folds
2023-12-21 15:58:59,037:INFO:Declaring metric variables
2023-12-21 15:58:59,039:INFO:Importing untrained model
2023-12-21 15:58:59,041:INFO:Logistic Regression Imported successfully
2023-12-21 15:58:59,045:INFO:Starting cross validation
2023-12-21 15:58:59,046:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:02,389:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,389:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,389:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:02,397:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,417:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,428:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,428:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,428:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:02,428:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:02,428:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,432:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,438:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,438:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,449:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:02,450:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,450:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,450:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,455:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:02,459:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,459:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,462:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,464:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:02,465:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,471:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,474:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,476:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:02,477:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,477:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,482:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,485:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:02,490:INFO:Calculating mean and std
2023-12-21 15:59:02,491:INFO:Creating metrics dataframe
2023-12-21 15:59:02,493:INFO:Uploading results into container
2023-12-21 15:59:02,494:INFO:Uploading model into container now
2023-12-21 15:59:02,494:INFO:_master_model_container: 1
2023-12-21 15:59:02,494:INFO:_display_container: 2
2023-12-21 15:59:02,495:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2440, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-21 15:59:02,495:INFO:create_model() successfully completed......................................
2023-12-21 15:59:02,598:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:02,599:INFO:Creating metrics dataframe
2023-12-21 15:59:02,600:INFO:Initializing K Neighbors Classifier
2023-12-21 15:59:02,600:INFO:Total runtime is 0.059487879276275635 minutes
2023-12-21 15:59:02,600:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:02,600:INFO:Initializing create_model()
2023-12-21 15:59:02,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:02,600:INFO:Checking exceptions
2023-12-21 15:59:02,600:INFO:Importing libraries
2023-12-21 15:59:02,600:INFO:Copying training dataset
2023-12-21 15:59:02,600:INFO:Defining folds
2023-12-21 15:59:02,600:INFO:Declaring metric variables
2023-12-21 15:59:02,600:INFO:Importing untrained model
2023-12-21 15:59:02,600:INFO:K Neighbors Classifier Imported successfully
2023-12-21 15:59:02,617:INFO:Starting cross validation
2023-12-21 15:59:02,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:05,517:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,523:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,523:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,533:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,533:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,533:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,533:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,543:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,543:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,594:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,599:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,602:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,618:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,620:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,623:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,638:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,643:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,648:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,650:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,650:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,650:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,650:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,656:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,656:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,656:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,656:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,667:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,667:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,667:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,687:INFO:Calculating mean and std
2023-12-21 15:59:05,687:INFO:Creating metrics dataframe
2023-12-21 15:59:05,687:INFO:Uploading results into container
2023-12-21 15:59:05,687:INFO:Uploading model into container now
2023-12-21 15:59:05,687:INFO:_master_model_container: 2
2023-12-21 15:59:05,687:INFO:_display_container: 2
2023-12-21 15:59:05,687:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-21 15:59:05,687:INFO:create_model() successfully completed......................................
2023-12-21 15:59:05,784:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:05,784:INFO:Creating metrics dataframe
2023-12-21 15:59:05,784:INFO:Initializing Naive Bayes
2023-12-21 15:59:05,784:INFO:Total runtime is 0.11254727045694987 minutes
2023-12-21 15:59:05,784:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:05,784:INFO:Initializing create_model()
2023-12-21 15:59:05,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:05,784:INFO:Checking exceptions
2023-12-21 15:59:05,784:INFO:Importing libraries
2023-12-21 15:59:05,784:INFO:Copying training dataset
2023-12-21 15:59:05,784:INFO:Defining folds
2023-12-21 15:59:05,784:INFO:Declaring metric variables
2023-12-21 15:59:05,784:INFO:Importing untrained model
2023-12-21 15:59:05,784:INFO:Naive Bayes Imported successfully
2023-12-21 15:59:05,801:INFO:Starting cross validation
2023-12-21 15:59:05,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:05,829:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,829:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,834:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,834:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,835:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,837:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,850:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,851:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:05,864:INFO:Calculating mean and std
2023-12-21 15:59:05,864:INFO:Creating metrics dataframe
2023-12-21 15:59:05,866:INFO:Uploading results into container
2023-12-21 15:59:05,867:INFO:Uploading model into container now
2023-12-21 15:59:05,867:INFO:_master_model_container: 3
2023-12-21 15:59:05,867:INFO:_display_container: 2
2023-12-21 15:59:05,867:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-21 15:59:05,867:INFO:create_model() successfully completed......................................
2023-12-21 15:59:05,950:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:05,950:INFO:Creating metrics dataframe
2023-12-21 15:59:05,950:INFO:Initializing Decision Tree Classifier
2023-12-21 15:59:05,950:INFO:Total runtime is 0.1153271516164144 minutes
2023-12-21 15:59:05,963:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:05,963:INFO:Initializing create_model()
2023-12-21 15:59:05,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:05,964:INFO:Checking exceptions
2023-12-21 15:59:05,964:INFO:Importing libraries
2023-12-21 15:59:05,964:INFO:Copying training dataset
2023-12-21 15:59:05,967:INFO:Defining folds
2023-12-21 15:59:05,967:INFO:Declaring metric variables
2023-12-21 15:59:05,970:INFO:Importing untrained model
2023-12-21 15:59:05,970:INFO:Decision Tree Classifier Imported successfully
2023-12-21 15:59:05,970:INFO:Starting cross validation
2023-12-21 15:59:05,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:06,034:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,034:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,034:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,044:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,044:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,044:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,044:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,044:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,044:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,050:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,050:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,050:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,050:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,050:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,050:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,075:INFO:Calculating mean and std
2023-12-21 15:59:06,075:INFO:Creating metrics dataframe
2023-12-21 15:59:06,079:INFO:Uploading results into container
2023-12-21 15:59:06,079:INFO:Uploading model into container now
2023-12-21 15:59:06,079:INFO:_master_model_container: 4
2023-12-21 15:59:06,079:INFO:_display_container: 2
2023-12-21 15:59:06,079:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2440, splitter='best')
2023-12-21 15:59:06,079:INFO:create_model() successfully completed......................................
2023-12-21 15:59:06,167:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:06,167:INFO:Creating metrics dataframe
2023-12-21 15:59:06,167:INFO:Initializing SVM - Linear Kernel
2023-12-21 15:59:06,167:INFO:Total runtime is 0.11893681685129802 minutes
2023-12-21 15:59:06,167:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:06,167:INFO:Initializing create_model()
2023-12-21 15:59:06,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:06,167:INFO:Checking exceptions
2023-12-21 15:59:06,167:INFO:Importing libraries
2023-12-21 15:59:06,167:INFO:Copying training dataset
2023-12-21 15:59:06,167:INFO:Defining folds
2023-12-21 15:59:06,167:INFO:Declaring metric variables
2023-12-21 15:59:06,167:INFO:Importing untrained model
2023-12-21 15:59:06,167:INFO:SVM - Linear Kernel Imported successfully
2023-12-21 15:59:06,183:INFO:Starting cross validation
2023-12-21 15:59:06,183:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:06,263:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,263:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,268:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,268:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,268:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,268:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,268:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,272:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,272:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,274:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,274:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,274:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,282:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,282:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,282:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,284:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,284:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,284:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,284:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,284:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,287:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,287:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,287:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,287:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,292:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,292:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,292:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,292:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,292:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,297:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,302:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:06,302:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,302:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,302:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,302:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,323:INFO:Calculating mean and std
2023-12-21 15:59:06,323:INFO:Creating metrics dataframe
2023-12-21 15:59:06,323:INFO:Uploading results into container
2023-12-21 15:59:06,323:INFO:Uploading model into container now
2023-12-21 15:59:06,323:INFO:_master_model_container: 5
2023-12-21 15:59:06,323:INFO:_display_container: 2
2023-12-21 15:59:06,323:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2440, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-21 15:59:06,323:INFO:create_model() successfully completed......................................
2023-12-21 15:59:06,400:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:06,400:INFO:Creating metrics dataframe
2023-12-21 15:59:06,420:INFO:Initializing Ridge Classifier
2023-12-21 15:59:06,420:INFO:Total runtime is 0.12315820852915446 minutes
2023-12-21 15:59:06,422:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:06,422:INFO:Initializing create_model()
2023-12-21 15:59:06,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:06,422:INFO:Checking exceptions
2023-12-21 15:59:06,422:INFO:Importing libraries
2023-12-21 15:59:06,422:INFO:Copying training dataset
2023-12-21 15:59:06,425:INFO:Defining folds
2023-12-21 15:59:06,425:INFO:Declaring metric variables
2023-12-21 15:59:06,427:INFO:Importing untrained model
2023-12-21 15:59:06,427:INFO:Ridge Classifier Imported successfully
2023-12-21 15:59:06,434:INFO:Starting cross validation
2023-12-21 15:59:06,435:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:06,458:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,458:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,458:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,458:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,465:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,465:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,465:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,466:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,466:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,466:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,466:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,467:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,467:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,467:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,468:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,468:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,469:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,469:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,469:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,469:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,471:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,471:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,472:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,472:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,472:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,472:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,472:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,472:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,472:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,472:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,475:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:06,483:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,483:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:06,496:INFO:Calculating mean and std
2023-12-21 15:59:06,496:INFO:Creating metrics dataframe
2023-12-21 15:59:06,498:INFO:Uploading results into container
2023-12-21 15:59:06,498:INFO:Uploading model into container now
2023-12-21 15:59:06,498:INFO:_master_model_container: 6
2023-12-21 15:59:06,498:INFO:_display_container: 2
2023-12-21 15:59:06,498:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2440, solver='auto',
                tol=0.0001)
2023-12-21 15:59:06,498:INFO:create_model() successfully completed......................................
2023-12-21 15:59:06,584:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:06,584:INFO:Creating metrics dataframe
2023-12-21 15:59:06,584:INFO:Initializing Random Forest Classifier
2023-12-21 15:59:06,584:INFO:Total runtime is 0.12588157653808593 minutes
2023-12-21 15:59:06,584:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:06,584:INFO:Initializing create_model()
2023-12-21 15:59:06,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:06,584:INFO:Checking exceptions
2023-12-21 15:59:06,584:INFO:Importing libraries
2023-12-21 15:59:06,584:INFO:Copying training dataset
2023-12-21 15:59:06,584:INFO:Defining folds
2023-12-21 15:59:06,584:INFO:Declaring metric variables
2023-12-21 15:59:06,601:INFO:Importing untrained model
2023-12-21 15:59:06,601:INFO:Random Forest Classifier Imported successfully
2023-12-21 15:59:06,601:INFO:Starting cross validation
2023-12-21 15:59:06,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:07,133:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,139:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,139:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,139:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,139:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,139:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,148:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,148:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,150:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,151:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,170:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,170:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,170:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,170:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,177:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,177:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,179:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,179:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,179:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,180:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,180:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,182:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,183:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,185:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,189:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,193:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,290:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,294:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,294:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,294:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,294:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,299:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,304:INFO:Calculating mean and std
2023-12-21 15:59:07,304:INFO:Creating metrics dataframe
2023-12-21 15:59:07,304:INFO:Uploading results into container
2023-12-21 15:59:07,304:INFO:Uploading model into container now
2023-12-21 15:59:07,304:INFO:_master_model_container: 7
2023-12-21 15:59:07,304:INFO:_display_container: 2
2023-12-21 15:59:07,304:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2440, verbose=0, warm_start=False)
2023-12-21 15:59:07,304:INFO:create_model() successfully completed......................................
2023-12-21 15:59:07,384:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:07,384:INFO:Creating metrics dataframe
2023-12-21 15:59:07,400:INFO:Initializing Quadratic Discriminant Analysis
2023-12-21 15:59:07,400:INFO:Total runtime is 0.13948082129160563 minutes
2023-12-21 15:59:07,402:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:07,402:INFO:Initializing create_model()
2023-12-21 15:59:07,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:07,402:INFO:Checking exceptions
2023-12-21 15:59:07,403:INFO:Importing libraries
2023-12-21 15:59:07,403:INFO:Copying training dataset
2023-12-21 15:59:07,403:INFO:Defining folds
2023-12-21 15:59:07,403:INFO:Declaring metric variables
2023-12-21 15:59:07,403:INFO:Importing untrained model
2023-12-21 15:59:07,403:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-21 15:59:07,403:INFO:Starting cross validation
2023-12-21 15:59:07,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:07,430:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,433:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,435:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,438:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,438:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:07,440:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,450:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,451:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,452:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,461:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,461:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,461:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,461:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,461:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:07,466:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,466:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,481:INFO:Calculating mean and std
2023-12-21 15:59:07,482:INFO:Creating metrics dataframe
2023-12-21 15:59:07,484:INFO:Uploading results into container
2023-12-21 15:59:07,484:INFO:Uploading model into container now
2023-12-21 15:59:07,484:INFO:_master_model_container: 8
2023-12-21 15:59:07,484:INFO:_display_container: 2
2023-12-21 15:59:07,484:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-21 15:59:07,484:INFO:create_model() successfully completed......................................
2023-12-21 15:59:07,567:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:07,567:INFO:Creating metrics dataframe
2023-12-21 15:59:07,567:INFO:Initializing Ada Boost Classifier
2023-12-21 15:59:07,567:INFO:Total runtime is 0.142266050974528 minutes
2023-12-21 15:59:07,567:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:07,567:INFO:Initializing create_model()
2023-12-21 15:59:07,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:07,567:INFO:Checking exceptions
2023-12-21 15:59:07,567:INFO:Importing libraries
2023-12-21 15:59:07,567:INFO:Copying training dataset
2023-12-21 15:59:07,582:INFO:Defining folds
2023-12-21 15:59:07,582:INFO:Declaring metric variables
2023-12-21 15:59:07,585:INFO:Importing untrained model
2023-12-21 15:59:07,586:INFO:Ada Boost Classifier Imported successfully
2023-12-21 15:59:07,586:INFO:Starting cross validation
2023-12-21 15:59:07,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:07,836:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,836:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,836:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,836:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,836:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,836:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,836:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,836:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,849:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,857:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,857:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,859:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,859:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,860:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,861:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,861:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,862:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,862:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,863:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,863:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,866:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,866:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,867:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,867:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,867:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,867:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,867:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,877:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,877:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,877:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:07,887:INFO:Calculating mean and std
2023-12-21 15:59:07,887:INFO:Creating metrics dataframe
2023-12-21 15:59:07,890:INFO:Uploading results into container
2023-12-21 15:59:07,890:INFO:Uploading model into container now
2023-12-21 15:59:07,891:INFO:_master_model_container: 9
2023-12-21 15:59:07,891:INFO:_display_container: 2
2023-12-21 15:59:07,891:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2440)
2023-12-21 15:59:07,891:INFO:create_model() successfully completed......................................
2023-12-21 15:59:07,967:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:07,967:INFO:Creating metrics dataframe
2023-12-21 15:59:07,984:INFO:Initializing Gradient Boosting Classifier
2023-12-21 15:59:07,984:INFO:Total runtime is 0.14922503232955933 minutes
2023-12-21 15:59:07,984:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:07,984:INFO:Initializing create_model()
2023-12-21 15:59:07,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:07,984:INFO:Checking exceptions
2023-12-21 15:59:07,984:INFO:Importing libraries
2023-12-21 15:59:07,984:INFO:Copying training dataset
2023-12-21 15:59:07,984:INFO:Defining folds
2023-12-21 15:59:07,984:INFO:Declaring metric variables
2023-12-21 15:59:07,984:INFO:Importing untrained model
2023-12-21 15:59:07,984:INFO:Gradient Boosting Classifier Imported successfully
2023-12-21 15:59:07,984:INFO:Starting cross validation
2023-12-21 15:59:07,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:10,491:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,499:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,502:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,533:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,533:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,533:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,566:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,569:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,569:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,584:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,584:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,594:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,616:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,616:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,625:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,625:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,625:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,625:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,635:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,635:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,645:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,656:INFO:Calculating mean and std
2023-12-21 15:59:10,656:INFO:Creating metrics dataframe
2023-12-21 15:59:10,658:INFO:Uploading results into container
2023-12-21 15:59:10,659:INFO:Uploading model into container now
2023-12-21 15:59:10,659:INFO:_master_model_container: 10
2023-12-21 15:59:10,660:INFO:_display_container: 2
2023-12-21 15:59:10,660:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2440, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-21 15:59:10,660:INFO:create_model() successfully completed......................................
2023-12-21 15:59:10,734:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:10,734:INFO:Creating metrics dataframe
2023-12-21 15:59:10,750:INFO:Initializing Linear Discriminant Analysis
2023-12-21 15:59:10,750:INFO:Total runtime is 0.19532180229822796 minutes
2023-12-21 15:59:10,750:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:10,750:INFO:Initializing create_model()
2023-12-21 15:59:10,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:10,750:INFO:Checking exceptions
2023-12-21 15:59:10,750:INFO:Importing libraries
2023-12-21 15:59:10,750:INFO:Copying training dataset
2023-12-21 15:59:10,750:INFO:Defining folds
2023-12-21 15:59:10,750:INFO:Declaring metric variables
2023-12-21 15:59:10,750:INFO:Importing untrained model
2023-12-21 15:59:10,750:INFO:Linear Discriminant Analysis Imported successfully
2023-12-21 15:59:10,767:INFO:Starting cross validation
2023-12-21 15:59:10,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:10,802:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,803:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,806:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,817:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,817:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:10,818:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,819:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,819:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:10,820:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,820:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,821:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,821:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,822:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,823:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,823:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,824:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,824:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:10,825:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,826:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,826:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,826:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,826:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:10,826:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:10,827:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,828:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:10,837:INFO:Calculating mean and std
2023-12-21 15:59:10,837:INFO:Creating metrics dataframe
2023-12-21 15:59:10,837:INFO:Uploading results into container
2023-12-21 15:59:10,837:INFO:Uploading model into container now
2023-12-21 15:59:10,837:INFO:_master_model_container: 11
2023-12-21 15:59:10,837:INFO:_display_container: 2
2023-12-21 15:59:10,837:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-21 15:59:10,837:INFO:create_model() successfully completed......................................
2023-12-21 15:59:10,917:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:10,917:INFO:Creating metrics dataframe
2023-12-21 15:59:10,934:INFO:Initializing Extra Trees Classifier
2023-12-21 15:59:10,934:INFO:Total runtime is 0.19838139613469444 minutes
2023-12-21 15:59:10,934:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:10,934:INFO:Initializing create_model()
2023-12-21 15:59:10,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:10,934:INFO:Checking exceptions
2023-12-21 15:59:10,934:INFO:Importing libraries
2023-12-21 15:59:10,934:INFO:Copying training dataset
2023-12-21 15:59:10,934:INFO:Defining folds
2023-12-21 15:59:10,934:INFO:Declaring metric variables
2023-12-21 15:59:10,934:INFO:Importing untrained model
2023-12-21 15:59:10,934:INFO:Extra Trees Classifier Imported successfully
2023-12-21 15:59:10,934:INFO:Starting cross validation
2023-12-21 15:59:10,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:11,356:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,356:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,356:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,358:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,364:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,364:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,364:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,364:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,366:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,366:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,366:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,367:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:11,386:INFO:Calculating mean and std
2023-12-21 15:59:11,386:INFO:Creating metrics dataframe
2023-12-21 15:59:11,386:INFO:Uploading results into container
2023-12-21 15:59:11,386:INFO:Uploading model into container now
2023-12-21 15:59:11,386:INFO:_master_model_container: 12
2023-12-21 15:59:11,386:INFO:_display_container: 2
2023-12-21 15:59:11,386:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2440, verbose=0, warm_start=False)
2023-12-21 15:59:11,386:INFO:create_model() successfully completed......................................
2023-12-21 15:59:11,467:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:11,467:INFO:Creating metrics dataframe
2023-12-21 15:59:11,484:INFO:Initializing Light Gradient Boosting Machine
2023-12-21 15:59:11,484:INFO:Total runtime is 0.20754719972610475 minutes
2023-12-21 15:59:11,484:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:11,484:INFO:Initializing create_model()
2023-12-21 15:59:11,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:11,484:INFO:Checking exceptions
2023-12-21 15:59:11,484:INFO:Importing libraries
2023-12-21 15:59:11,484:INFO:Copying training dataset
2023-12-21 15:59:11,484:INFO:Defining folds
2023-12-21 15:59:11,484:INFO:Declaring metric variables
2023-12-21 15:59:11,484:INFO:Importing untrained model
2023-12-21 15:59:11,484:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-21 15:59:11,499:INFO:Starting cross validation
2023-12-21 15:59:11,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:14,535:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,537:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,537:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,569:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,569:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,579:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,582:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,583:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,583:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,589:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,589:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,589:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,783:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,783:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,793:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,793:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,793:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,799:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,823:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,823:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,833:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,833:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,833:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,833:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,833:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,833:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,843:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,848:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,851:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:14,864:INFO:Calculating mean and std
2023-12-21 15:59:14,864:INFO:Creating metrics dataframe
2023-12-21 15:59:14,867:INFO:Uploading results into container
2023-12-21 15:59:14,867:INFO:Uploading model into container now
2023-12-21 15:59:14,867:INFO:_master_model_container: 13
2023-12-21 15:59:14,867:INFO:_display_container: 2
2023-12-21 15:59:14,867:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2440, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-21 15:59:14,867:INFO:create_model() successfully completed......................................
2023-12-21 15:59:14,971:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:14,971:INFO:Creating metrics dataframe
2023-12-21 15:59:14,971:INFO:Initializing Dummy Classifier
2023-12-21 15:59:14,971:INFO:Total runtime is 0.2656631112098694 minutes
2023-12-21 15:59:14,971:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:14,971:INFO:Initializing create_model()
2023-12-21 15:59:14,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9ECB910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:14,971:INFO:Checking exceptions
2023-12-21 15:59:14,971:INFO:Importing libraries
2023-12-21 15:59:14,971:INFO:Copying training dataset
2023-12-21 15:59:14,984:INFO:Defining folds
2023-12-21 15:59:14,984:INFO:Declaring metric variables
2023-12-21 15:59:14,987:INFO:Importing untrained model
2023-12-21 15:59:14,988:INFO:Dummy Classifier Imported successfully
2023-12-21 15:59:14,988:INFO:Starting cross validation
2023-12-21 15:59:14,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:15,022:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,023:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,024:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,026:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,026:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,027:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,033:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,033:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,033:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,033:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,034:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,034:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,035:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,035:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,035:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,035:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,036:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,037:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,037:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,038:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,038:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,040:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,040:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,041:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,041:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,041:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,043:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,043:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,044:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,045:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,045:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:15,046:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:15,053:INFO:Calculating mean and std
2023-12-21 15:59:15,053:INFO:Creating metrics dataframe
2023-12-21 15:59:15,053:INFO:Uploading results into container
2023-12-21 15:59:15,053:INFO:Uploading model into container now
2023-12-21 15:59:15,053:INFO:_master_model_container: 14
2023-12-21 15:59:15,053:INFO:_display_container: 2
2023-12-21 15:59:15,053:INFO:DummyClassifier(constant=None, random_state=2440, strategy='prior')
2023-12-21 15:59:15,053:INFO:create_model() successfully completed......................................
2023-12-21 15:59:15,134:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:15,134:INFO:Creating metrics dataframe
2023-12-21 15:59:15,154:INFO:Initializing create_model()
2023-12-21 15:59:15,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEC8F7A10>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2440, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:15,154:INFO:Checking exceptions
2023-12-21 15:59:15,154:INFO:Importing libraries
2023-12-21 15:59:15,154:INFO:Copying training dataset
2023-12-21 15:59:15,154:INFO:Defining folds
2023-12-21 15:59:15,154:INFO:Declaring metric variables
2023-12-21 15:59:15,154:INFO:Importing untrained model
2023-12-21 15:59:15,154:INFO:Declaring custom model
2023-12-21 15:59:15,154:INFO:Gradient Boosting Classifier Imported successfully
2023-12-21 15:59:15,154:INFO:Cross validation set to False
2023-12-21 15:59:15,154:INFO:Fitting Model
2023-12-21 15:59:17,533:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2440, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-21 15:59:17,533:INFO:create_model() successfully completed......................................
2023-12-21 15:59:17,634:INFO:_master_model_container: 14
2023-12-21 15:59:17,634:INFO:_display_container: 2
2023-12-21 15:59:17,634:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2440, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-21 15:59:17,634:INFO:compare_models() successfully completed......................................
2023-12-21 15:59:29,231:INFO:PyCaret ClassificationExperiment
2023-12-21 15:59:29,231:INFO:Logging name: clf-default-name
2023-12-21 15:59:29,231:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-21 15:59:29,231:INFO:version 3.2.0
2023-12-21 15:59:29,231:INFO:Initializing setup()
2023-12-21 15:59:29,231:INFO:self.USI: f5b9
2023-12-21 15:59:29,231:INFO:self._variable_keys: {'gpu_param', 'html_param', '_ml_usecase', '_available_plots', 'n_jobs_param', 'fold_groups_param', 'X_test', 'seed', 'y_train', 'target_param', 'fold_generator', 'X', 'fix_imbalance', 'USI', 'idx', 'is_multiclass', 'logging_param', 'log_plots_param', 'y_test', 'data', 'exp_id', 'memory', 'gpu_n_jobs_param', 'X_train', 'fold_shuffle_param', 'exp_name_log', 'y', 'pipeline'}
2023-12-21 15:59:29,231:INFO:Checking environment
2023-12-21 15:59:29,231:INFO:python_version: 3.11.5
2023-12-21 15:59:29,231:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2023-12-21 15:59:29,231:INFO:machine: AMD64
2023-12-21 15:59:29,231:INFO:platform: Windows-10-10.0.22631-SP0
2023-12-21 15:59:29,234:INFO:Memory: svmem(total=16886980608, available=4311011328, percent=74.5, used=12575969280, free=4311011328)
2023-12-21 15:59:29,235:INFO:Physical Core: 12
2023-12-21 15:59:29,235:INFO:Logical Core: 20
2023-12-21 15:59:29,235:INFO:Checking libraries
2023-12-21 15:59:29,235:INFO:System:
2023-12-21 15:59:29,235:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2023-12-21 15:59:29,235:INFO:executable: c:\ProgramData\anaconda3\python.exe
2023-12-21 15:59:29,235:INFO:   machine: Windows-10-10.0.22631-SP0
2023-12-21 15:59:29,235:INFO:PyCaret required dependencies:
2023-12-21 15:59:29,235:INFO:                 pip: 23.2.1
2023-12-21 15:59:29,235:INFO:          setuptools: 68.0.0
2023-12-21 15:59:29,235:INFO:             pycaret: 3.2.0
2023-12-21 15:59:29,235:INFO:             IPython: 8.15.0
2023-12-21 15:59:29,235:INFO:          ipywidgets: 8.0.4
2023-12-21 15:59:29,235:INFO:                tqdm: 4.65.0
2023-12-21 15:59:29,235:INFO:               numpy: 1.24.3
2023-12-21 15:59:29,235:INFO:              pandas: 2.0.3
2023-12-21 15:59:29,235:INFO:              jinja2: 3.1.2
2023-12-21 15:59:29,235:INFO:               scipy: 1.11.1
2023-12-21 15:59:29,235:INFO:              joblib: 1.2.0
2023-12-21 15:59:29,235:INFO:             sklearn: 1.3.0
2023-12-21 15:59:29,235:INFO:                pyod: 1.1.2
2023-12-21 15:59:29,235:INFO:            imblearn: 0.10.1
2023-12-21 15:59:29,235:INFO:   category_encoders: 2.6.3
2023-12-21 15:59:29,235:INFO:            lightgbm: 4.1.0
2023-12-21 15:59:29,235:INFO:               numba: 0.57.1
2023-12-21 15:59:29,235:INFO:            requests: 2.31.0
2023-12-21 15:59:29,235:INFO:          matplotlib: 3.7.2
2023-12-21 15:59:29,235:INFO:          scikitplot: 0.3.7
2023-12-21 15:59:29,235:INFO:         yellowbrick: 1.5
2023-12-21 15:59:29,235:INFO:              plotly: 5.9.0
2023-12-21 15:59:29,235:INFO:    plotly-resampler: Not installed
2023-12-21 15:59:29,235:INFO:             kaleido: 0.2.1
2023-12-21 15:59:29,235:INFO:           schemdraw: 0.15
2023-12-21 15:59:29,235:INFO:         statsmodels: 0.14.0
2023-12-21 15:59:29,235:INFO:              sktime: 0.21.1
2023-12-21 15:59:29,235:INFO:               tbats: 1.1.3
2023-12-21 15:59:29,235:INFO:            pmdarima: 2.0.4
2023-12-21 15:59:29,235:INFO:              psutil: 5.9.0
2023-12-21 15:59:29,235:INFO:          markupsafe: 2.1.1
2023-12-21 15:59:29,235:INFO:             pickle5: Not installed
2023-12-21 15:59:29,235:INFO:         cloudpickle: 2.2.1
2023-12-21 15:59:29,235:INFO:         deprecation: 2.1.0
2023-12-21 15:59:29,235:INFO:              xxhash: 2.0.2
2023-12-21 15:59:29,235:INFO:           wurlitzer: Not installed
2023-12-21 15:59:29,235:INFO:PyCaret optional dependencies:
2023-12-21 15:59:29,235:INFO:                shap: Not installed
2023-12-21 15:59:29,235:INFO:           interpret: Not installed
2023-12-21 15:59:29,235:INFO:                umap: Not installed
2023-12-21 15:59:29,235:INFO:     ydata_profiling: Not installed
2023-12-21 15:59:29,235:INFO:  explainerdashboard: Not installed
2023-12-21 15:59:29,235:INFO:             autoviz: Not installed
2023-12-21 15:59:29,235:INFO:           fairlearn: Not installed
2023-12-21 15:59:29,235:INFO:          deepchecks: Not installed
2023-12-21 15:59:29,235:INFO:             xgboost: Not installed
2023-12-21 15:59:29,235:INFO:            catboost: Not installed
2023-12-21 15:59:29,235:INFO:              kmodes: Not installed
2023-12-21 15:59:29,235:INFO:             mlxtend: Not installed
2023-12-21 15:59:29,235:INFO:       statsforecast: Not installed
2023-12-21 15:59:29,235:INFO:        tune_sklearn: Not installed
2023-12-21 15:59:29,235:INFO:                 ray: Not installed
2023-12-21 15:59:29,235:INFO:            hyperopt: Not installed
2023-12-21 15:59:29,235:INFO:              optuna: Not installed
2023-12-21 15:59:29,235:INFO:               skopt: Not installed
2023-12-21 15:59:29,235:INFO:              mlflow: Not installed
2023-12-21 15:59:29,235:INFO:              gradio: Not installed
2023-12-21 15:59:29,235:INFO:             fastapi: Not installed
2023-12-21 15:59:29,235:INFO:             uvicorn: Not installed
2023-12-21 15:59:29,235:INFO:              m2cgen: Not installed
2023-12-21 15:59:29,235:INFO:           evidently: Not installed
2023-12-21 15:59:29,235:INFO:               fugue: Not installed
2023-12-21 15:59:29,235:INFO:           streamlit: Not installed
2023-12-21 15:59:29,235:INFO:             prophet: Not installed
2023-12-21 15:59:29,235:INFO:None
2023-12-21 15:59:29,235:INFO:Set up data.
2023-12-21 15:59:29,243:INFO:Set up folding strategy.
2023-12-21 15:59:29,243:INFO:Set up train/test split.
2023-12-21 15:59:29,251:INFO:Set up index.
2023-12-21 15:59:29,251:INFO:Assigning column types.
2023-12-21 15:59:29,254:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-21 15:59:29,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-21 15:59:29,275:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 15:59:29,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,316:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-21 15:59:29,317:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 15:59:29,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,319:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-21 15:59:29,353:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 15:59:29,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-21 15:59:29,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,409:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-21 15:59:29,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,488:INFO:Preparing preprocessing pipeline...
2023-12-21 15:59:29,489:INFO:Set up label encoding.
2023-12-21 15:59:29,489:INFO:Set up simple imputation.
2023-12-21 15:59:29,504:INFO:Finished creating preprocessing pipeline.
2023-12-21 15:59:29,506:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\huang\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'fea...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-12-21 15:59:29,506:INFO:Creating final display dataframe.
2023-12-21 15:59:29,552:INFO:Setup _display_container:                     Description              Value
0                    Session id               5953
1                        Target             Status
2                   Target type         Multiclass
3                Target mapping  C: 0, CL: 1, D: 2
4           Original data shape         (7905, 26)
5        Transformed data shape         (7905, 26)
6   Transformed train set shape         (5533, 26)
7    Transformed test set shape         (2372, 26)
8              Numeric features                 25
9                    Preprocess               True
10              Imputation type             simple
11           Numeric imputation               mean
12       Categorical imputation               mode
13               Fold Generator    StratifiedKFold
14                  Fold Number                 10
15                     CPU Jobs                 -1
16                      Use GPU              False
17               Log Experiment              False
18              Experiment Name   clf-default-name
19                          USI               f5b9
2023-12-21 15:59:29,586:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-21 15:59:29,633:INFO:setup() successfully completed in 0.41s...............
2023-12-21 15:59:29,634:INFO:Initializing compare_models()
2023-12-21 15:59:29,634:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-12-21 15:59:29,634:INFO:Checking exceptions
2023-12-21 15:59:29,636:INFO:Preparing display monitor
2023-12-21 15:59:29,636:INFO:Initializing Logistic Regression
2023-12-21 15:59:29,636:INFO:Total runtime is 0.0 minutes
2023-12-21 15:59:29,650:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:29,650:INFO:Initializing create_model()
2023-12-21 15:59:29,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:29,650:INFO:Checking exceptions
2023-12-21 15:59:29,650:INFO:Importing libraries
2023-12-21 15:59:29,650:INFO:Copying training dataset
2023-12-21 15:59:29,650:INFO:Defining folds
2023-12-21 15:59:29,650:INFO:Declaring metric variables
2023-12-21 15:59:29,657:INFO:Importing untrained model
2023-12-21 15:59:29,659:INFO:Logistic Regression Imported successfully
2023-12-21 15:59:29,664:INFO:Starting cross validation
2023-12-21 15:59:29,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:29,714:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,714:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,717:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,717:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,718:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:29,720:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,720:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,722:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,722:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,723:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,724:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,724:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,725:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,725:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:29,726:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:29,726:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,727:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,727:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,727:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,728:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,728:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:29,729:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,730:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,730:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:29,731:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,731:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,732:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,732:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,733:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:29,734:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,734:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:29,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:29,735:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,745:INFO:Calculating mean and std
2023-12-21 15:59:29,745:INFO:Creating metrics dataframe
2023-12-21 15:59:29,745:INFO:Uploading results into container
2023-12-21 15:59:29,745:INFO:Uploading model into container now
2023-12-21 15:59:29,745:INFO:_master_model_container: 1
2023-12-21 15:59:29,745:INFO:_display_container: 2
2023-12-21 15:59:29,745:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5953, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-21 15:59:29,745:INFO:create_model() successfully completed......................................
2023-12-21 15:59:29,833:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:29,833:INFO:Creating metrics dataframe
2023-12-21 15:59:29,833:INFO:Initializing K Neighbors Classifier
2023-12-21 15:59:29,833:INFO:Total runtime is 0.003288753827412923 minutes
2023-12-21 15:59:29,833:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:29,833:INFO:Initializing create_model()
2023-12-21 15:59:29,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:29,833:INFO:Checking exceptions
2023-12-21 15:59:29,833:INFO:Importing libraries
2023-12-21 15:59:29,833:INFO:Copying training dataset
2023-12-21 15:59:29,833:INFO:Defining folds
2023-12-21 15:59:29,833:INFO:Declaring metric variables
2023-12-21 15:59:29,848:INFO:Importing untrained model
2023-12-21 15:59:29,850:INFO:K Neighbors Classifier Imported successfully
2023-12-21 15:59:29,850:INFO:Starting cross validation
2023-12-21 15:59:29,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:29,906:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,909:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,910:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,911:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,911:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,911:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,912:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,912:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,914:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,914:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,915:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,915:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,915:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,915:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,915:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,916:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,916:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,917:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,918:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,918:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,918:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,918:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,918:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,918:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,918:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,918:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,925:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,933:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,936:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:29,946:INFO:Calculating mean and std
2023-12-21 15:59:29,946:INFO:Creating metrics dataframe
2023-12-21 15:59:29,946:INFO:Uploading results into container
2023-12-21 15:59:29,946:INFO:Uploading model into container now
2023-12-21 15:59:29,946:INFO:_master_model_container: 2
2023-12-21 15:59:29,946:INFO:_display_container: 2
2023-12-21 15:59:29,946:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-21 15:59:29,946:INFO:create_model() successfully completed......................................
2023-12-21 15:59:30,033:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:30,033:INFO:Creating metrics dataframe
2023-12-21 15:59:30,033:INFO:Initializing Naive Bayes
2023-12-21 15:59:30,033:INFO:Total runtime is 0.006620991230010986 minutes
2023-12-21 15:59:30,033:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:30,033:INFO:Initializing create_model()
2023-12-21 15:59:30,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:30,033:INFO:Checking exceptions
2023-12-21 15:59:30,033:INFO:Importing libraries
2023-12-21 15:59:30,033:INFO:Copying training dataset
2023-12-21 15:59:30,033:INFO:Defining folds
2023-12-21 15:59:30,033:INFO:Declaring metric variables
2023-12-21 15:59:30,033:INFO:Importing untrained model
2023-12-21 15:59:30,033:INFO:Naive Bayes Imported successfully
2023-12-21 15:59:30,050:INFO:Starting cross validation
2023-12-21 15:59:30,050:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:30,076:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,076:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,080:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,080:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,080:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,080:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,083:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,083:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,085:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,085:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,086:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,086:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,086:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,087:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,089:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,089:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,089:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,101:INFO:Calculating mean and std
2023-12-21 15:59:30,101:INFO:Creating metrics dataframe
2023-12-21 15:59:30,103:INFO:Uploading results into container
2023-12-21 15:59:30,103:INFO:Uploading model into container now
2023-12-21 15:59:30,104:INFO:_master_model_container: 3
2023-12-21 15:59:30,104:INFO:_display_container: 2
2023-12-21 15:59:30,104:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-21 15:59:30,104:INFO:create_model() successfully completed......................................
2023-12-21 15:59:30,193:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:30,193:INFO:Creating metrics dataframe
2023-12-21 15:59:30,199:INFO:Initializing Decision Tree Classifier
2023-12-21 15:59:30,199:INFO:Total runtime is 0.009375818570454915 minutes
2023-12-21 15:59:30,201:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:30,201:INFO:Initializing create_model()
2023-12-21 15:59:30,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:30,201:INFO:Checking exceptions
2023-12-21 15:59:30,201:INFO:Importing libraries
2023-12-21 15:59:30,201:INFO:Copying training dataset
2023-12-21 15:59:30,204:INFO:Defining folds
2023-12-21 15:59:30,204:INFO:Declaring metric variables
2023-12-21 15:59:30,206:INFO:Importing untrained model
2023-12-21 15:59:30,208:INFO:Decision Tree Classifier Imported successfully
2023-12-21 15:59:30,212:INFO:Starting cross validation
2023-12-21 15:59:30,213:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:30,268:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,270:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,271:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,274:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,274:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,274:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,276:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,277:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,280:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,280:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,280:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,281:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,282:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,283:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,283:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,283:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,284:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,284:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,285:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,285:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,285:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,287:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,287:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,288:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,288:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,288:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,292:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,295:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,297:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,304:INFO:Calculating mean and std
2023-12-21 15:59:30,304:INFO:Creating metrics dataframe
2023-12-21 15:59:30,306:INFO:Uploading results into container
2023-12-21 15:59:30,306:INFO:Uploading model into container now
2023-12-21 15:59:30,306:INFO:_master_model_container: 4
2023-12-21 15:59:30,306:INFO:_display_container: 2
2023-12-21 15:59:30,307:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5953, splitter='best')
2023-12-21 15:59:30,307:INFO:create_model() successfully completed......................................
2023-12-21 15:59:30,396:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:30,396:INFO:Creating metrics dataframe
2023-12-21 15:59:30,402:INFO:Initializing SVM - Linear Kernel
2023-12-21 15:59:30,402:INFO:Total runtime is 0.012763480345408121 minutes
2023-12-21 15:59:30,404:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:30,404:INFO:Initializing create_model()
2023-12-21 15:59:30,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:30,405:INFO:Checking exceptions
2023-12-21 15:59:30,405:INFO:Importing libraries
2023-12-21 15:59:30,405:INFO:Copying training dataset
2023-12-21 15:59:30,407:INFO:Defining folds
2023-12-21 15:59:30,407:INFO:Declaring metric variables
2023-12-21 15:59:30,409:INFO:Importing untrained model
2023-12-21 15:59:30,410:INFO:SVM - Linear Kernel Imported successfully
2023-12-21 15:59:30,414:INFO:Starting cross validation
2023-12-21 15:59:30,414:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:30,489:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,490:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,493:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,495:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,496:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,498:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,499:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,500:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,500:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,502:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,503:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,503:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,504:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,504:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,504:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,504:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,504:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,505:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,505:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,505:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,506:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,506:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,506:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,507:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,508:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,508:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,509:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,509:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,510:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,511:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,511:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,512:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,513:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,513:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,513:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-21 15:59:30,514:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,514:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,516:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,517:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,517:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,519:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,519:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,519:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,520:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,520:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,525:INFO:Calculating mean and std
2023-12-21 15:59:30,525:INFO:Creating metrics dataframe
2023-12-21 15:59:30,526:INFO:Uploading results into container
2023-12-21 15:59:30,527:INFO:Uploading model into container now
2023-12-21 15:59:30,527:INFO:_master_model_container: 5
2023-12-21 15:59:30,527:INFO:_display_container: 2
2023-12-21 15:59:30,527:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5953, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-21 15:59:30,527:INFO:create_model() successfully completed......................................
2023-12-21 15:59:30,600:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:30,600:INFO:Creating metrics dataframe
2023-12-21 15:59:30,619:INFO:Initializing Ridge Classifier
2023-12-21 15:59:30,619:INFO:Total runtime is 0.01638987064361572 minutes
2023-12-21 15:59:30,619:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:30,619:INFO:Initializing create_model()
2023-12-21 15:59:30,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:30,619:INFO:Checking exceptions
2023-12-21 15:59:30,619:INFO:Importing libraries
2023-12-21 15:59:30,619:INFO:Copying training dataset
2023-12-21 15:59:30,619:INFO:Defining folds
2023-12-21 15:59:30,619:INFO:Declaring metric variables
2023-12-21 15:59:30,619:INFO:Importing untrained model
2023-12-21 15:59:30,636:INFO:Ridge Classifier Imported successfully
2023-12-21 15:59:30,638:INFO:Starting cross validation
2023-12-21 15:59:30,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:30,660:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,660:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,660:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,666:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,667:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,667:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,668:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,668:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,670:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,670:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,670:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,670:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,671:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,680:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,680:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,680:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,680:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,683:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,683:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,684:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,684:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-21 15:59:30,684:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,686:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,686:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,687:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,688:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,688:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,689:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,692:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:30,694:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:30,700:INFO:Calculating mean and std
2023-12-21 15:59:30,701:INFO:Creating metrics dataframe
2023-12-21 15:59:30,703:INFO:Uploading results into container
2023-12-21 15:59:30,704:INFO:Uploading model into container now
2023-12-21 15:59:30,704:INFO:_master_model_container: 6
2023-12-21 15:59:30,704:INFO:_display_container: 2
2023-12-21 15:59:30,704:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5953, solver='auto',
                tol=0.0001)
2023-12-21 15:59:30,704:INFO:create_model() successfully completed......................................
2023-12-21 15:59:30,783:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:30,783:INFO:Creating metrics dataframe
2023-12-21 15:59:30,783:INFO:Initializing Random Forest Classifier
2023-12-21 15:59:30,783:INFO:Total runtime is 0.019123546282450356 minutes
2023-12-21 15:59:30,799:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:30,799:INFO:Initializing create_model()
2023-12-21 15:59:30,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:30,799:INFO:Checking exceptions
2023-12-21 15:59:30,799:INFO:Importing libraries
2023-12-21 15:59:30,799:INFO:Copying training dataset
2023-12-21 15:59:30,802:INFO:Defining folds
2023-12-21 15:59:30,802:INFO:Declaring metric variables
2023-12-21 15:59:30,804:INFO:Importing untrained model
2023-12-21 15:59:30,806:INFO:Random Forest Classifier Imported successfully
2023-12-21 15:59:30,810:INFO:Starting cross validation
2023-12-21 15:59:30,811:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:31,332:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,333:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,333:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,333:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,333:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,336:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,336:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,336:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,336:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,336:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,341:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,341:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,341:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,341:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,341:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,354:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,376:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,376:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,379:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,379:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,384:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,386:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,474:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,474:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,474:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,478:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,478:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,478:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,483:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,485:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,487:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,488:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,494:INFO:Calculating mean and std
2023-12-21 15:59:31,494:INFO:Creating metrics dataframe
2023-12-21 15:59:31,494:INFO:Uploading results into container
2023-12-21 15:59:31,494:INFO:Uploading model into container now
2023-12-21 15:59:31,494:INFO:_master_model_container: 7
2023-12-21 15:59:31,494:INFO:_display_container: 2
2023-12-21 15:59:31,494:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5953, verbose=0, warm_start=False)
2023-12-21 15:59:31,494:INFO:create_model() successfully completed......................................
2023-12-21 15:59:31,582:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:31,582:INFO:Creating metrics dataframe
2023-12-21 15:59:31,586:INFO:Initializing Quadratic Discriminant Analysis
2023-12-21 15:59:31,586:INFO:Total runtime is 0.0325008749961853 minutes
2023-12-21 15:59:31,586:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:31,586:INFO:Initializing create_model()
2023-12-21 15:59:31,586:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:31,586:INFO:Checking exceptions
2023-12-21 15:59:31,586:INFO:Importing libraries
2023-12-21 15:59:31,586:INFO:Copying training dataset
2023-12-21 15:59:31,586:INFO:Defining folds
2023-12-21 15:59:31,586:INFO:Declaring metric variables
2023-12-21 15:59:31,586:INFO:Importing untrained model
2023-12-21 15:59:31,598:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-21 15:59:31,601:INFO:Starting cross validation
2023-12-21 15:59:31,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:31,620:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,623:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,627:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,627:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,627:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,627:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,633:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,635:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,635:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,635:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,636:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,637:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,641:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,649:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,649:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,649:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,651:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,652:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:31,654:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:31,662:INFO:Calculating mean and std
2023-12-21 15:59:31,662:INFO:Creating metrics dataframe
2023-12-21 15:59:31,664:INFO:Uploading results into container
2023-12-21 15:59:31,664:INFO:Uploading model into container now
2023-12-21 15:59:31,664:INFO:_master_model_container: 8
2023-12-21 15:59:31,664:INFO:_display_container: 2
2023-12-21 15:59:31,664:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-21 15:59:31,664:INFO:create_model() successfully completed......................................
2023-12-21 15:59:31,750:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:31,750:INFO:Creating metrics dataframe
2023-12-21 15:59:31,750:INFO:Initializing Ada Boost Classifier
2023-12-21 15:59:31,750:INFO:Total runtime is 0.0352334459622701 minutes
2023-12-21 15:59:31,750:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:31,750:INFO:Initializing create_model()
2023-12-21 15:59:31,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:31,750:INFO:Checking exceptions
2023-12-21 15:59:31,750:INFO:Importing libraries
2023-12-21 15:59:31,750:INFO:Copying training dataset
2023-12-21 15:59:31,750:INFO:Defining folds
2023-12-21 15:59:31,750:INFO:Declaring metric variables
2023-12-21 15:59:31,765:INFO:Importing untrained model
2023-12-21 15:59:31,768:INFO:Ada Boost Classifier Imported successfully
2023-12-21 15:59:31,768:INFO:Starting cross validation
2023-12-21 15:59:31,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:31,997:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,000:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,000:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,016:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,018:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,018:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,018:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,018:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,018:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,018:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,028:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,028:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,034:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,034:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,034:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,048:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,050:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,052:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,052:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,053:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,057:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,058:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:32,069:INFO:Calculating mean and std
2023-12-21 15:59:32,069:INFO:Creating metrics dataframe
2023-12-21 15:59:32,071:INFO:Uploading results into container
2023-12-21 15:59:32,072:INFO:Uploading model into container now
2023-12-21 15:59:32,072:INFO:_master_model_container: 9
2023-12-21 15:59:32,072:INFO:_display_container: 2
2023-12-21 15:59:32,072:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5953)
2023-12-21 15:59:32,072:INFO:create_model() successfully completed......................................
2023-12-21 15:59:32,162:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:32,162:INFO:Creating metrics dataframe
2023-12-21 15:59:32,169:INFO:Initializing Gradient Boosting Classifier
2023-12-21 15:59:32,169:INFO:Total runtime is 0.04221267700195312 minutes
2023-12-21 15:59:32,171:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:32,171:INFO:Initializing create_model()
2023-12-21 15:59:32,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:32,171:INFO:Checking exceptions
2023-12-21 15:59:32,171:INFO:Importing libraries
2023-12-21 15:59:32,171:INFO:Copying training dataset
2023-12-21 15:59:32,174:INFO:Defining folds
2023-12-21 15:59:32,174:INFO:Declaring metric variables
2023-12-21 15:59:32,176:INFO:Importing untrained model
2023-12-21 15:59:32,178:INFO:Gradient Boosting Classifier Imported successfully
2023-12-21 15:59:32,181:INFO:Starting cross validation
2023-12-21 15:59:32,182:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:34,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,619:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,620:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,743:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,749:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,750:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,805:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,817:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,825:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,825:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,832:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,834:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,835:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,835:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,835:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,835:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,835:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,846:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,850:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,850:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,850:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,887:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,887:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,887:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:34,897:INFO:Calculating mean and std
2023-12-21 15:59:34,897:INFO:Creating metrics dataframe
2023-12-21 15:59:34,899:INFO:Uploading results into container
2023-12-21 15:59:34,899:INFO:Uploading model into container now
2023-12-21 15:59:34,901:INFO:_master_model_container: 10
2023-12-21 15:59:34,901:INFO:_display_container: 2
2023-12-21 15:59:34,901:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5953, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-21 15:59:34,901:INFO:create_model() successfully completed......................................
2023-12-21 15:59:34,983:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:34,983:INFO:Creating metrics dataframe
2023-12-21 15:59:34,983:INFO:Initializing Linear Discriminant Analysis
2023-12-21 15:59:34,983:INFO:Total runtime is 0.08912246624628703 minutes
2023-12-21 15:59:34,983:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:34,983:INFO:Initializing create_model()
2023-12-21 15:59:34,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:34,983:INFO:Checking exceptions
2023-12-21 15:59:34,983:INFO:Importing libraries
2023-12-21 15:59:34,983:INFO:Copying training dataset
2023-12-21 15:59:35,000:INFO:Defining folds
2023-12-21 15:59:35,000:INFO:Declaring metric variables
2023-12-21 15:59:35,004:INFO:Importing untrained model
2023-12-21 15:59:35,004:INFO:Linear Discriminant Analysis Imported successfully
2023-12-21 15:59:35,004:INFO:Starting cross validation
2023-12-21 15:59:35,004:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:35,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:35,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,039:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,049:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,049:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:35,049:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,049:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,051:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,052:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:35,053:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,053:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,055:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,058:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,058:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,058:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,059:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,060:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,060:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,061:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,061:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,062:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:35,062:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,062:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,063:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,063:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,065:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,065:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,066:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,067:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,069:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:35,069:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:35,069:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,069:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,079:INFO:Calculating mean and std
2023-12-21 15:59:35,079:INFO:Creating metrics dataframe
2023-12-21 15:59:35,079:INFO:Uploading results into container
2023-12-21 15:59:35,079:INFO:Uploading model into container now
2023-12-21 15:59:35,079:INFO:_master_model_container: 11
2023-12-21 15:59:35,079:INFO:_display_container: 2
2023-12-21 15:59:35,079:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-21 15:59:35,079:INFO:create_model() successfully completed......................................
2023-12-21 15:59:35,167:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:35,167:INFO:Creating metrics dataframe
2023-12-21 15:59:35,167:INFO:Initializing Extra Trees Classifier
2023-12-21 15:59:35,167:INFO:Total runtime is 0.09218544960021972 minutes
2023-12-21 15:59:35,167:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:35,167:INFO:Initializing create_model()
2023-12-21 15:59:35,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:35,167:INFO:Checking exceptions
2023-12-21 15:59:35,167:INFO:Importing libraries
2023-12-21 15:59:35,167:INFO:Copying training dataset
2023-12-21 15:59:35,167:INFO:Defining folds
2023-12-21 15:59:35,167:INFO:Declaring metric variables
2023-12-21 15:59:35,183:INFO:Importing untrained model
2023-12-21 15:59:35,185:INFO:Extra Trees Classifier Imported successfully
2023-12-21 15:59:35,185:INFO:Starting cross validation
2023-12-21 15:59:35,185:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:35,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,573:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,580:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,585:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,588:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,588:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,588:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,590:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,590:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,590:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,590:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,594:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,594:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,594:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,596:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,604:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,604:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,604:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,617:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,621:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,624:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,627:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,632:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,633:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,634:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,636:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,636:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,636:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,636:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,636:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:35,655:INFO:Calculating mean and std
2023-12-21 15:59:35,655:INFO:Creating metrics dataframe
2023-12-21 15:59:35,655:INFO:Uploading results into container
2023-12-21 15:59:35,655:INFO:Uploading model into container now
2023-12-21 15:59:35,655:INFO:_master_model_container: 12
2023-12-21 15:59:35,655:INFO:_display_container: 2
2023-12-21 15:59:35,655:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5953, verbose=0, warm_start=False)
2023-12-21 15:59:35,655:INFO:create_model() successfully completed......................................
2023-12-21 15:59:35,750:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:35,750:INFO:Creating metrics dataframe
2023-12-21 15:59:35,757:INFO:Initializing Light Gradient Boosting Machine
2023-12-21 15:59:35,758:INFO:Total runtime is 0.10201382239659627 minutes
2023-12-21 15:59:35,759:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:35,760:INFO:Initializing create_model()
2023-12-21 15:59:35,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:35,760:INFO:Checking exceptions
2023-12-21 15:59:35,760:INFO:Importing libraries
2023-12-21 15:59:35,760:INFO:Copying training dataset
2023-12-21 15:59:35,763:INFO:Defining folds
2023-12-21 15:59:35,763:INFO:Declaring metric variables
2023-12-21 15:59:35,765:INFO:Importing untrained model
2023-12-21 15:59:35,767:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-21 15:59:35,768:INFO:Starting cross validation
2023-12-21 15:59:35,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:38,820:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,820:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,830:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,840:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,844:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,848:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,852:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,855:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,856:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,858:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:38,859:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,083:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,083:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,090:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,103:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,103:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,111:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,111:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,117:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,117:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,117:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,121:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,121:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,133:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,133:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,141:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,267:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,273:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,273:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,283:INFO:Calculating mean and std
2023-12-21 15:59:39,283:INFO:Creating metrics dataframe
2023-12-21 15:59:39,287:INFO:Uploading results into container
2023-12-21 15:59:39,287:INFO:Uploading model into container now
2023-12-21 15:59:39,287:INFO:_master_model_container: 13
2023-12-21 15:59:39,287:INFO:_display_container: 2
2023-12-21 15:59:39,287:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5953, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-21 15:59:39,287:INFO:create_model() successfully completed......................................
2023-12-21 15:59:39,383:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:39,383:INFO:Creating metrics dataframe
2023-12-21 15:59:39,383:INFO:Initializing Dummy Classifier
2023-12-21 15:59:39,383:INFO:Total runtime is 0.16245598793029786 minutes
2023-12-21 15:59:39,383:INFO:SubProcess create_model() called ==================================
2023-12-21 15:59:39,399:INFO:Initializing create_model()
2023-12-21 15:59:39,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DCE9F31ED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:39,399:INFO:Checking exceptions
2023-12-21 15:59:39,399:INFO:Importing libraries
2023-12-21 15:59:39,399:INFO:Copying training dataset
2023-12-21 15:59:39,400:INFO:Defining folds
2023-12-21 15:59:39,400:INFO:Declaring metric variables
2023-12-21 15:59:39,405:INFO:Importing untrained model
2023-12-21 15:59:39,405:INFO:Dummy Classifier Imported successfully
2023-12-21 15:59:39,405:INFO:Starting cross validation
2023-12-21 15:59:39,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-21 15:59:39,437:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,439:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,449:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,449:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,449:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,450:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,454:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,455:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,456:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,456:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,457:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,458:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,458:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,458:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,458:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,459:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,460:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,461:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,462:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,463:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,463:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-21 15:59:39,465:WARNING:C:\Users\huang\AppData\Roaming\Python\Python311\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-21 15:59:39,479:INFO:Calculating mean and std
2023-12-21 15:59:39,479:INFO:Creating metrics dataframe
2023-12-21 15:59:39,479:INFO:Uploading results into container
2023-12-21 15:59:39,482:INFO:Uploading model into container now
2023-12-21 15:59:39,482:INFO:_master_model_container: 14
2023-12-21 15:59:39,482:INFO:_display_container: 2
2023-12-21 15:59:39,482:INFO:DummyClassifier(constant=None, random_state=5953, strategy='prior')
2023-12-21 15:59:39,482:INFO:create_model() successfully completed......................................
2023-12-21 15:59:39,567:INFO:SubProcess create_model() end ==================================
2023-12-21 15:59:39,567:INFO:Creating metrics dataframe
2023-12-21 15:59:39,580:INFO:Initializing create_model()
2023-12-21 15:59:39,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DCEF3F4450>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5953, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-21 15:59:39,580:INFO:Checking exceptions
2023-12-21 15:59:39,580:INFO:Importing libraries
2023-12-21 15:59:39,580:INFO:Copying training dataset
2023-12-21 15:59:39,584:INFO:Defining folds
2023-12-21 15:59:39,584:INFO:Declaring metric variables
2023-12-21 15:59:39,584:INFO:Importing untrained model
2023-12-21 15:59:39,584:INFO:Declaring custom model
2023-12-21 15:59:39,584:INFO:Gradient Boosting Classifier Imported successfully
2023-12-21 15:59:39,584:INFO:Cross validation set to False
2023-12-21 15:59:39,584:INFO:Fitting Model
2023-12-21 15:59:41,967:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5953, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-21 15:59:41,967:INFO:create_model() successfully completed......................................
2023-12-21 15:59:42,068:INFO:_master_model_container: 14
2023-12-21 15:59:42,068:INFO:_display_container: 2
2023-12-21 15:59:42,068:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5953, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-21 15:59:42,068:INFO:compare_models() successfully completed......................................
